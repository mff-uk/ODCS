<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cz.cuni.mff.xrg.odcs</groupId>
		<artifactId>odcs</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>backend</artifactId>
	<packaging>jar</packaging>
	<name>backend</name>
	<description></description>

	<dependencies>
		<dependency> <!-- JUnit dependency -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency> <!-- spring test support -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency> <!-- mockito for tests -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.4</version>
			<scope>test</scope>
		</dependency>

		<dependency> <!-- commons project -->
			<groupId>${project.groupId}</groupId>
			<artifactId>commons</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- commons-app project -->
			<groupId>${project.groupId}</groupId>
			<artifactId>commons-app</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- RDF project -->
			<groupId>${project.groupId}</groupId>
			<artifactId>dataunit-rdf-impl</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- commons-web project -->
                        <!-- presented because of OSGI export packages
                            it's not nice, but if we wan't to remove this
                            then we have to carefully examine packages 
                            added in commons-web, theire depedencies etc .. 
                            -->
			<groupId>${project.groupId}</groupId>
			<artifactId>commons-web</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- apache.commons : parse cmd. args -->
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
			<type>jar</type>
		</dependency>

		<dependency> <!-- because of wrong version used by Apache-fuseki -->
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>

	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>onejar-maven-plugin.googlecode.com</id>
			<url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
		</pluginRepository>
	</pluginRepositories>

  <!-- define license -->
      <licenses>
          <license>
            <name>GNU General Public License, Version 3</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
            <distribution>repo</distribution>
            <!-- https://maven.apache.org/pom.html#Licenses -->
          </license>
      </licenses>
        
    <build>
        
<!--          add license from LICENSE.md to the generated JAR file 
        <resources>
            <resource>
                <directory>${basedir}</directory>  this is default dir
                <includes>
                  <include>LICENSE.md</include>
                </includes>
            </resource>
         </resources>-->

	

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>cz.cuni.mff.xrg.odcs.backend.AppEntry</mainClass>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<!-- the two lines below tell Maven not to include test scoped dependencies -->
							<includeScope>runtime</includeScope>
							<excludeScope>provided</excludeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- Fix m2e not supporting copy-dependency plugin -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>