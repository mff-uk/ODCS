
AnnotationsInput.dataUnit.notFound = Can't find DataUnit with required name for field:
AnnotationsInput.no.input          = No input for field: {0} . All inputs have different type.
AnnotationsInput.set.value.failed  = Failed to set value for ''{0}'' exception: ''{1}''

AnnotationsOutput.unknown.field    = Unknown type of field: {0}
AnnotationsOutput.value.set.failed = Failed to set value for ''{0}'' exception: {1}

Configurator.configException    = dpu.configure throws non ConfigException
Configurator.configuration.fail = Failed to configure DPU.

DPUEvent.completed            = DPU: {0} completed.
DPUEvent.dataUnit.error       = DataUnit error.
DPUEvent.execution.failed     = DPU execution failed.
DPUEvent.missing.output       = Missing output DataUnit.
DPUEvent.post.executor.failed = DPU''s post-executor failed.
DPUEvent.pre.executor.failed  = DPU''s pre-executor failed.
DPUEvent.request.termination  = Request for execution termination.
DPUEvent.starting             = Starting DPU developer''s code for DPU: {0}
DPUEvent.unexpected.state     = Unexpected state of DPU before execution.

DPUExecutor.post.executor.exception = The post-executor throws an unexpected exception. See logs for more details.
DPUExecutor.pre.executor.exception  = The pre-executor throws an unexpected exception. See logs for more details.

DPUPreExecutorContextPreparator.merge.failed    = Failed to merge contexts.
DPUPreExecutorContextPreparator.missing.context = Missing context for ''{0}'' required by ''node.getDpuInstance().getName()''

DailyReport.report                            = Finished executions daily report
DailyReport.started.report                    = Started executions daily report

DailyReportEmailBuilder.cancelled             = cancelled
DailyReportEmailBuilder.cancelling            = canceling
DailyReportEmailBuilder.detail                = Detail
DailyReportEmailBuilder.execution.detail      = Execution detail
DailyReportEmailBuilder.failed                = failed
DailyReportEmailBuilder.finished              = finished
DailyReportEmailBuilder.finished.with.warning = finished with warning
DailyReportEmailBuilder.header                = <th>Pipeline</th><th>Execution</th><th>Start</th><th>End</th><th>Created / Scheduled by</th><th>Result</th>
DailyReportEmailBuilder.instance              = Instance: 
DailyReportEmailBuilder.queued                = queued
DailyReportEmailBuilder.running               = running
DailyReportEmailBuilder.started.header        = <th>Pipeline</th><th>Execution</th><th>Start</th><th>Created / Scheduled by</th><th>Status</th>

Executor.execution.blank.pipeline         = Pipeline failed because it has no DPUs.
Executor.execution.blank.pipeline.no.dpus = Pipeline failed because it has no DPUs.
Executor.execution.failed                 = DPU execution failed
Executor.execution.failed.detail          = The DPU execution thread ends in non-standard way

InstantReport.execution.ended.report         = Finished execution report for: {0} [{1}]
InstantReport.execution.started.report       = Started execution report for: {0} [{1}]

InstantReportEmailBuilder.dpu.debug          = Debug (DPU)
InstantReportEmailBuilder.dpu.error          = Error (DPU)
InstantReportEmailBuilder.dpu.info           = Info (DPU)
InstantReportEmailBuilder.dpu.termination    = Termination request (DPU)
InstantReportEmailBuilder.dpu.warning        = Warning (DPU)
InstantReportEmailBuilder.execution          = <b>Execution id:</b> {0} 
InstantReportEmailBuilder.execution.detail   = Execution detail
InstantReportEmailBuilder.execution.ends     = <b>Execution ends at:</b> {0} 
InstantReportEmailBuilder.execution.owner    = <b>Executed / scheduled by:</b> {0}
InstantReportEmailBuilder.execution.result   = <b>Execution result:</b> {0} 
InstantReportEmailBuilder.execution.starts   = <b>Execution starts at:</b> {0} 
InstantReportEmailBuilder.instance           = Instance: {0} 
InstantReportEmailBuilder.pipeline.error     = Error (pipeline)
InstantReportEmailBuilder.pipeline.info      = Info (pipeline)
InstantReportEmailBuilder.published.messages = Published messages:
InstantReportEmailBuilder.published.table    = <th>dpu</th><th>time</th><th>type</th><th>short message</th>
InstantReportEmailBuilder.report             = <b>Report for pipeline:</b> {0}

PipelineAbortedEvent.execution.aborted        = Pipeline execution aborted.
PipelineAbortedEvent.execution.aborted.detail = Pipeline execution aborted on user request.

PipelineFailedEvent.execution.failed               = Pipeline execution failed.
PipelineFailedEvent.execution.failed.detail        = Execution failed because: 
PipelineFailedEvent.missing.dpu                    = Missing DPU.
PipelineFailedEvent.missing.jarFile                = Missing jar-file for DPU: ''{0}''
PipelineFailedEvent.pipeline.failed                = Pipeline execution failed.
PipelineFailedEvent.pipeline.failed.context        = Failed to prepare Context for DPURecord because of exception: 
PipelineFailedEvent.pipeline.failed.detail         = Execution failed due to error: 
PipelineFailedEvent.pipeline.failed.implementation = Loading of DPURecord implementation threw the following exception: 
PipelineFailedEvent.pipeline.failed.root           = Root structure exception: 
PipelineFailedEvent.unknown                        = unknown

PipelineFinished.execution.finished = Execution: {0} finished

PipelineInfo.continue        = Pipeline continue
PipelineInfo.starting        = Starting execution: {0}
PipelineInfo.starting.detail = Starting execution number: {0} pipeline: {1}
PipelineInfo.waiting         = Pipeline is waiting as there are conflicts pipeline running

PipelineRestart.restarted = Pipeline execution has been restarted.

PipelineSanitized.canceled = Pipeline has been cancelled by sanitizer.

SQLDatabaseReconnectAspect.database.error     = ODCS - database error
SQLDatabaseReconnectAspect.database.exception = Database is down with exception: </br>

ProbeHandler.function.ok = WORKS