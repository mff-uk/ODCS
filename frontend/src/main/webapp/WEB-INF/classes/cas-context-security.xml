<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<b:bean class="cz.cuni.mff.xrg.odcs.frontend.HostnameVerifierUtil"
		init-method="allowLocalhost" />

	<debug />
	<!-- // Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<b:bean id="authenticationProvider"
		class="cz.cuni.mff.xrg.odcs.frontend.auth.UVCasAuthenticationProvider"
		p:serviceProperties-ref="serviceProperties" p:key="casAuthProviderKey">
		<b:property name="authenticationUserDetailsService">
			<b:bean
				class="cz.cuni.mff.xrg.odcs.frontend.auth.CasAuthenticationUserDetailsService">
				<b:constructor-arg ref="userFacade" />
				<b:property name="userNameAttributeName" value="${cas.attributeName.userName}" />
				<b:property name="fullNameAttributeName" value="${cas.attributeName.fullName}" />
				<b:property name="roleAttributeName" value="${cas.attributeName.role}" />
				<b:property name="actorIdAttributeName" value="${cas.attributeName.actorId}" />
				<b:property name="actorNameAttributeName" value="${cas.attributeName.actorName}" />
			</b:bean>

		</b:property>
		<b:property name="ticketValidator">
			<b:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<b:constructor-arg value="${cas.server.host}" />
			</b:bean>
		</b:property>
	</b:bean>

	<b:bean id="pgtStorage"
		class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />

	<b:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties"
		p:service="${cas.security.check.url}" p:authenticateAllArtifacts="true" />

	<global-method-security secured-annotations="enabled"
		pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
	</global-method-security>

	<b:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<b:property name="permissionEvaluator" ref="permissionEvaluator" />
	</b:bean>

	<b:bean id="permissionEvaluator"
		class="cz.cuni.mff.xrg.odcs.commons.app.auth.DefaultPermissionEvaluator" />

	<!-- This filter handles a Single Logout Request from the CAS Server -->
	<b:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />

	<!-- This filter redirects to the CAS Server to signal Single Logout should 
		be performed -->
	<b:bean id="requestSingleLogoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter"
		p:filterProcessesUrl="/cas_logout">
		<b:constructor-arg
			value="${cas.logout.url}" />
		<b:constructor-arg>
			<b:bean
				class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</b:constructor-arg>
	</b:bean>

	<b:bean id="casEntryPoint"
		class="cz.cuni.mff.xrg.odcs.frontend.auth.UVCasAuthenticationEntryPoint"
		p:serviceProperties-ref="serviceProperties" p:loginUrl="${cas.login.url}" p:behindProxy="${cas.behindProxy}"/>

	<b:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter"
		p:authenticationManager-ref="authenticationManager"
		p:serviceProperties-ref="serviceProperties"
		p:proxyGrantingTicketStorage-ref="pgtStorage"
		p:proxyReceptorUrl="/j_spring_cas_security_proxyreceptor">
		<b:property name="authenticationFailureHandler">
			<b:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
				p:defaultFailureUrl="/" />
		</b:property>
		<b:property name="authenticationSuccessHandler">
			<b:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
				p:defaultTargetUrl="/" p:alwaysUseDefaultTargetUrl="true" />
		</b:property>
		<b:property name="authenticationDetailsSource">
			<b:bean
				class="cz.cuni.mff.xrg.odcs.frontend.auth.UVWebAuthenticationDetailsSource">
				<b:property name="behindProxy" value="${cas.behindProxy}"/>
			</b:bean>
		</b:property>
	</b:bean>

	<http entry-point-ref="casEntryPoint" use-expressions="true">
		<intercept-url pattern="/probe" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('pipeline.create')" />
		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<custom-filter ref="casFilter" position="CAS_FILTER" />
	</http>

	<b:bean id="authenticationContext"
		class="cz.cuni.mff.xrg.odcs.commons.app.auth.AuthenticationContext" />
	<b:bean id="authenticationService"
		class="cz.cuni.mff.xrg.odcs.frontend.auth.AuthenticationService" />
	<b:bean id="logoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
		<b:property name="invalidateHttpSession" value="true" />
	</b:bean>
	<b:bean id="permissionUtils" 
		class="cz.cuni.mff.xrg.odcs.commons.app.auth.PermissionUtils"/>
</b:beans>
