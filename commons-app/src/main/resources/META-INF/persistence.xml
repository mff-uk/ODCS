<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
    <persistence-unit name="odcs">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
        <class>cz.cuni.mff.xrg.odcs.commons.app.dpu.DPUInstanceRecord</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.dpu.DPUTemplateRecord</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.log.Log</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.context.ProcessingUnitInfo</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.context.DataUnitInfo</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.context.ExecutionContextInfo</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.message.MessageRecord</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.OpenEvent</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.Pipeline</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineExecution</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.graph.Edge</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.graph.Node</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.graph.PipelineGraph</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.pipeline.graph.Position</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.properties.RuntimeProperty</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.properties.Property</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.rdf.namespace.NamespacePrefix</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.scheduling.Schedule</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.scheduling.ScheduleNotificationRecord</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.User</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.RoleEntity</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.Permission</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.EmailAddress</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.UserNotificationRecord</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.user.UserActor</class>
        <class>cz.cuni.mff.xrg.odcs.commons.app.execution.server.ExecutionServer</class>

        <exclude-unlisted-classes>false</exclude-unlisted-classes>
        <properties>
            <!-- We want weaving (e.g. for lazyloading). Dynamic (=runtime) weaving needs Java agent, static (=compile-time) should suffice for our needs. -->
            <property name="eclipselink.weaving" value="static"/>

            <!-- Logging of SQL queries generated by EclipseLink. -->
            <property name="eclipselink.logging.level" value="INFO"/>
            <property name="eclipselink.logging.parameters" value="true"/>

            <!-- logger for eclipse link -->
            <property name="eclipselink.logging.logger" value="org.eclipse.persistence.logging.Slf4jSessionLogger"/>
            <!-- Aditional performance monitor. -->
            <property name="eclipselink.session.customizer" value="cz.cuni.mff.xrg.odcs.commons.app.PerformanceSessionCustomizer"/>

            <property name="eclipselink.ddl-generation" value="create-tables"/>
            <property name="eclipselink.ddl-generation.output-mode" value="database"/>
            <property name="eclipselink.cache.shared.default" value="false"/>

        </properties>
    </persistence-unit>
</persistence>
