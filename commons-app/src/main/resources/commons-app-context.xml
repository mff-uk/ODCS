<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <!-- transactions by annotations -->
    <tx:annotation-driven mode="aspectj" />	
    <context:spring-configured />
    <context:annotation-config />
    
    <!-- enable aspects -->
    <aop:aspectj-autoproxy />
   	
    <!-- application configuration -->
    <bean id="configuration" class="cz.cuni.mff.xrg.odcs.commons.app.conf.AppConfig" factory-method="loadFromHome" />

	<!-- factory for data source is needed to choose correct database platform -->
	<bean id="dataSourceFactory" class="cz.cuni.mff.xrg.odcs.commons.app.dao.db.datasource.DataSourceFactory" />
	
	<!-- data source with db login properties loaded from application configuration -->
    <bean id="dataSource"
		  factory-bean="dataSourceFactory"
		  factory-method="getDataSource"
		  destroy-method="close" />
	
    <!-- EntityManager factory -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="odcs"/>
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Manager for database transactions -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>
	
	<!-- Injects dependencies into aspect for fixing corrupted database sequences. -->
	<bean id="sequenceAspect"
		  class="cz.cuni.mff.xrg.odcs.commons.app.dao.VirtuosoSequenceSanitizerAspect"
		  factory-method="aspectOf" />

    <!-- support for loading DPUs -->
    <bean id="moduleFacade" class="cz.cuni.mff.xrg.odcs.commons.app.module.osgi.OSGIModuleFacade"
              init-method="start" destroy-method="stop" />

    <!-- implementation of DPU's watcher -->
    <bean id="watcher" class="cz.cuni.mff.xrg.odcs.commons.app.module.impl.FileNotifierServer" 
              init-method="start" destroy-method="stop"/>	
		
    <!-- Facade for managing users -->
    <bean id="userFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.UserFacadeImpl" />

    <!-- Facade for managing pipelines -->
    <bean id="pipelineFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.PipelineFacadeImpl" />

    <!-- Facade for managing DPUs -->
    <bean id="dpuFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.DPUFacadeImpl" />
	
    <!-- Facade for viewing log messages -->    
    <bean id="logFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.LogFacadeImpl" />

    <!-- Facade for managing shedules -->
    <bean id="scheduleFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.ScheduleFacadeImpl" />

    <!-- Facade for managing RDF namespace prefixes -->
    <bean id="prefixFacade" class="cz.cuni.mff.xrg.odcs.commons.app.facade.NamespacePrefixFacadeImpl" />
	
    <!-- Service responsible for delivering emails -->
    <bean id="emailSender" class="cz.cuni.mff.xrg.odcs.commons.app.communication.EmailSender">
        <constructor-arg ref="configuration" />
    </bean>
	
    <!-- special configuration for moduleFacede, but it's loaded in configuration, so these two have to share one instance -->
    <bean id="abstractModuleFacadeConfig" abstract="true" class="cz.cuni.mff.xrg.odcs.commons.app.module.osgi.OSGIModuleFacadeConfig">
        <constructor-arg ref="configuration" />
    </bean>

    <!-- Service or exploring DPUs -->
    <bean id="DPUExplorer" class="cz.cuni.mff.xrg.odcs.commons.app.dpu.DPUExplorer" />
	
    <!-- Application DAO -->
    <bean id="dbPipeline" class="cz.cuni.mff.xrg.odcs.commons.app.pipeline.DbPipelineImpl" />
    <bean id="dbExecution" class="cz.cuni.mff.xrg.odcs.commons.app.pipeline.DbExecutionImpl" />
    <bean id="dbOpenEvent" class="cz.cuni.mff.xrg.odcs.commons.app.pipeline.DbOpenEventImpl" />
    <bean id="dbTemplate" class="cz.cuni.mff.xrg.odcs.commons.app.dpu.DbDPUTemplateRecordImpl" />
    <bean id="dbInstance" class="cz.cuni.mff.xrg.odcs.commons.app.dpu.DbDPUInstanceRecordImpl" />
    <bean id="dbMessage" class="cz.cuni.mff.xrg.odcs.commons.app.execution.message.DbMessageRecordImpl" />
    <bean id="dbLogRead" class="cz.cuni.mff.xrg.odcs.commons.app.execution.log.DbLogReadImpl" />
    <bean id="dbSchedule" class="cz.cuni.mff.xrg.odcs.commons.app.scheduling.DbScheduleImpl" />
    <bean id="dbScheduleNotification" class="cz.cuni.mff.xrg.odcs.commons.app.scheduling.DbScheduleNotificationImpl" />
    <bean id="dbUserNotification" class="cz.cuni.mff.xrg.odcs.commons.app.user.DbUserNotificationRecordImpl" />
    <bean id="dbUser" class="cz.cuni.mff.xrg.odcs.commons.app.user.DbUserImpl" />
    <bean id="dbNamespacePrefix" class="cz.cuni.mff.xrg.odcs.commons.app.rdf.namespace.DbNamespacePrefixImpl" />
    
    <!-- authorizator required by dao -->
    <bean id="dbAuthorizator" class="cz.cuni.mff.xrg.odcs.commons.app.dao.db.DbAuthorizatorImpl" />
    
    <!-- translator for ODCS filters -->
    <bean class="cz.cuni.mff.xrg.odcs.commons.app.dao.db.filter.BaseFilterTranslator" />
   
</beans>